{"version":3,"sources":["index.js","checkWinner.js"],"names":["Circle","props","className","value","onClick","CreateArray","rows","array","i","Board","row","column","this","circles","push","renderCircle","React","Component","Game","state","redIsNext","gameOver","draw","setState","slice","board","DropPiece","counter","winner","CheckDiagonalRight","CheckDiagonalLeft","status","handleClick","resetGame","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5a514a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as winner from './checkWinner.js';\r\n\r\nfunction Circle(props) {\r\n  let className = \"\" \r\n  if (props.value === \"Red\") {\r\n    className = \"circle-red\"\r\n  } else if (props.value === \"Yellow\") {\r\n    className = \"circle-yellow\"\r\n  } else {\r\n    className = \"circle\"\r\n  }\r\n  return (\r\n    <button className={className} onClick={props.onClick}></button>\r\n  );\r\n}\r\n\r\nfunction DropPiece(column, board) {\r\n  for (let row = 5; row >= 0; row--) {\r\n    if (board[row][column] == null) {\r\n      return row;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction CreateArray(rows) {\r\n  var array = [null];\r\n\r\n  for (var i=0; i < rows; i++) {\r\n    array[i] = [null];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderCircle(row, column) {\r\n    return (\r\n      <Circle\r\n        value={this.props.circles[row][column]}\r\n        onClick={() => this.props.onClick(column)}\r\n      />\r\n    );\r\n  }\r\n\r\n    render() {\r\n      let circles = [];\r\n      for (let row = 0; row < 6; row++){\r\n        let rows = [];\r\n        for (let column = 0;  column < 7; column++) {\r\n          rows.push(this.renderCircle(row, column));\r\n        }\r\n        circles.push(<div className=\"board-row\">{rows}</div>);\r\n      }\r\n      return (\r\n        <div>\r\n          {circles}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n      circles: CreateArray(6),\r\n      redIsNext: true,\r\n      gameOver: false,\r\n      draw: false,\r\n    };\r\n  }\r\n\r\n  resetGame() {\r\n    this.setState({\r\n      circles: CreateArray(6),\r\n      redIsNext: true,\r\n      gameOver: false,\r\n      draw: false,\r\n    })\r\n  }\r\n\r\n  handleClick(column) {\r\n    const circles = this.state.circles.slice();\r\n    if (!this.state.gameOver) {\r\n      let row = DropPiece(column, circles)\r\n      if (row != null) {\r\n        circles[row][column] = this.state.redIsNext ? 'Red' : 'Yellow';\r\n        this.setState({\r\n          circles: circles,\r\n          redIsNext: !this.state.redIsNext,\r\n        });\r\n      }\r\n      if (winner.CheckVertical(circles, row, column) ||\r\n          winner.CheckHorizontal(circles, row, column) ||\r\n          winner.CheckDiagonal(circles, row, column)) {\r\n        this.setState({\r\n          gameOver: true,\r\n        })\r\n      } else if (winner.CheckDraw(circles)) {\r\n        this.setState({\r\n          draw: true,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n  const circles = this.state.circles;\r\n\r\n  let status = \"\"\r\n      if (this.state.gameOver) {\r\n        status = \"Game Over! Winner: \" + (this.state.redIsNext ? 'Yellow' : 'Red')\r\n      } else if (this.state.draw) {\r\n        status = \"Game Over! It's a Draw!\";\r\n      } else {\r\n        status = 'Next player: ' + (this.state.redIsNext ? 'Red' : 'Yellow');\r\n      }\r\n\r\n    return (\r\n    <div>\r\n    <div><h1>{status}</h1></div>\r\n      <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board circles={circles} onClick={(column) => this.handleClick(column)}/>\r\n          </div>\r\n      </div>\r\n      <div className=\"game-button\"><button onClick={() => this.resetGame()}>Restart Game</button></div>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);","export function CheckVertical(board, row, column) {\r\n    let counter = 1;\r\n    if (row <= 2) {\r\n        while (row < 5) {\r\n            if (board[row][column] === board[row + 1][column]) {\r\n                row++;\r\n                counter++;\r\n                if (counter === 4) {\r\n                    return true;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nexport function CheckHorizontal(board, row, column) {\r\n    let counter = 1;\r\n    while (column >= 0) {\r\n        if (board[row][column] === board[row][column - 1] && board[row][column - 1] != null) {\r\n            column--;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    while (column < 6) {\r\n        if (board[row][column] === board[row][column + 1] && board[row][column + 1] != null) {\r\n            column++;\r\n            counter++;\r\n            if (counter === 4) {\r\n                return true;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function CheckDiagonalLeft(board, row, column) {\r\n    let counter = 1;\r\n    while (column > 0 && row > 0) {\r\n        if (board[row][column] === board[row - 1][column - 1] && board[row - 1][column - 1] != null) {\r\n            column--;\r\n            row--;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    while (column < 6 && row < 5) {\r\n        if (board[row][column] === board[row + 1][column + 1] && board[row + 1][column + 1] != null) {\r\n            column++;\r\n            row++;\r\n            counter++;\r\n            if (counter === 4) {\r\n                return true;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function CheckDiagonalRight(board, row, column) {\r\n    let counter = 1;\r\n    while (column > 0 && row < 5) {\r\n        if (board[row][column] === board[row + 1][column - 1] && board[row + 1][column - 1] != null) {\r\n            column--;\r\n            row++;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    while (column < 6 && row > 0) {\r\n        if (board[row][column] === board[row - 1][column + 1] && board[row - 1][column + 1] != null) {\r\n            column++;\r\n            row--;\r\n            counter++;\r\n            if (counter === 4) {\r\n                return true;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function CheckDiagonal(board, row, column) {\r\n    return (CheckDiagonalRight(board, row, column) || CheckDiagonalLeft(board, row, column));\r\n}\r\n\r\nexport function CheckDraw(board) {\r\n    for (let column = 0; column < 6; column++) {\r\n        if (board[0][column] == null) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}"],"sourceRoot":""}